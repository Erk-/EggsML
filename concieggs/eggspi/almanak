#!/usr/bin/env python3
#
# Vis tidspunktet for solopgang og solnedgang for KÃ¸benhavn eller andre steder.

from datetime import datetime
from dateutil import tz
import math
import time
import requests
import subprocess
import sys

def date_convert(s):
    """Convert a datetime string to datetime object."""
    return datetime.strptime(s, "%Y-%m-%dT%H:%M:%S").time()

# Check if silent mode
silent = sys.argv[0] == "-s" or sys.argv[0] == "--silent"

# Find location
if (not silent and len(sys.argv) < 2 or silent and len(sys.argv) < 3):
    location = "Copenhagen"
else:
    if silent:
        location = sys.argv[2]
    else:
        location = sys.argv[1]

# Get data from openweathermap
url = "http://api.openweathermap.org/data/2.5/weather?q={0}&lang=da&units=metric&APPID=4b42ecc61fd13e0a0cb7006d583fb3e0".format(location)
resp = requests.get(url=url)
data = resp.json()

# Set timezone to CET
from_zone = tz.gettz('UTC')
to_zone = tz.gettz('CET')
sunrise_ut = data["sys"]["sunrise"]
sunset_ut = data["sys"]["sunset"]
sunrise = datetime.utcfromtimestamp(sunrise_ut).replace(tzinfo=from_zone).astimezone(to_zone)
sunset = datetime.utcfromtimestamp(sunset_ut).replace(tzinfo=from_zone).astimezone(to_zone)
daylight_time = (sunset - sunrise).seconds

if silent:
    if (sunrise_ut == sunset_ut):
        print("\n")
    else:
        print("{}\n{}".format(sunrise.time(), sunset.time()))
else:
    if (len(sys.argv) > 1):
        print("Almanak for {0} (CET):".format(sys.argv[1]))
    if (sunrise_ut == sunset_ut):
        print("ðŸŒ… midnatssol")
    else:
        print("ðŸŒ… {} ðŸŒ‡ {}. Solen er oppe i {} timer og {} minutter.".format(sunrise.time(), sunset.time(), math.floor(daylight_time / 3600), math.floor(daylight_time % 3600 / 60)))
